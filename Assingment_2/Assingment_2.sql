-- Retrieve the total number of rentals made in the Sakila database.
select count(*) from rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

-- Display the first name and last name of customers in uppercase
select upper(first_name) , upper(last_name) from customer;

-- Extract the month from the rental date and display it alongside the rental ID.
select month(rental_date) as month, rental_id from rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id,count(rental_id) as rentalIdCount from rental Group by customer_id;

-- Find the total revenue generated by each store.
select st.store_id, sum(amount) as total_renvue from store st 
join  staff s on s.store_id = st.store_id
join  payment p on p.staff_id = s.staff_id
group by st.store_id;

-- Display the title of the movie, customer's first name, and last name who rented it.
select f.title, cus.first_name, cus.last_name from film f
join inventory inv on inv.film_id = f.film_id
join rental r on r.inventory_id = inv.inventory_id
join customer cus on cus.customer_id = r.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select distinct a.first_name, a.last_name, f.title from actor a
join film_actor fa on fa.actor_id = a.actor_id
join film f on f.film_id = fa.film_id
where f.title = 'Gone with the Wind';

-- Determine the total number of rentals for each category of movies
select  fg.category_id as category,count(r.rental_id) as rentalCount from film_category fg
join film f on f.film_id = fg.film_id
join inventory inv  on inv.film_id = f.film_id
join rental r on r.inventory_id = inv.inventory_id
group by fg.category_id;

-- Find the average rental rate of movies in each language.
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY.
select l.name,avg(rental_rate) from film f
join language l on f.language_id = l.language_id
group by l.name;;

-- Retrieve the customer names along with the total amount they've spent on rentals.
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.
select c.first_name,c.last_name,sum(p.amount) as total_amount_spent from customer c
join payment p on p.customer_id = c.customer_id
join rental r on r.rental_id = p.rental_id
group by c.customer_id;

-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.
select  f.title as titleMovie, cus.first_name, cus.last_name,c.city as cityname from customer cus
join address ad on ad.address_id = cus.address_id
join city c on c.city_id = ad.city_id
join rental r on r.customer_id = cus.customer_id
join inventory inv on inv.inventory_id = r.inventory_id
join film f on f.film_id = inv.film_id
group by  f.title,  cus.first_name, cus.last_name, c.city;

-- Display the top 5 rented movies along with the number of times they've been rented.
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results
select f.title, count(*) as rentalCount from rental r
join inventory inv on inv.inventory_id = r.inventory_id
join film f on f.film_id = inv.film_id
group by f.title
order by rentalCount desc 
limit 5;

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.
select c.customer_id, c.first_name, c.last_name from customer c
join  rental r on c.customer_id = r.customer_id
join  inventory i on r.inventory_id = i.inventory_id
join   store s on i.store_id = s.store_id
where s.store_id in (1, 2)
group by c.customer_id, c.first_name, c.last_name
having count(distinct s.store_id) = 2;

